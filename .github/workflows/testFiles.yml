name: Test Files

on:
  pull_request:
    paths:
      - '**/docker-compose.yml'
      - '**/umbrel-app.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get changed files
      id: files
      uses: Ana06/get-changed-files@v2.2.0

    - name: Run docker-compose checks
      id: docker_compose_checks
      run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          if [[ $changed_file == *docker-compose.yml ]]
          then
            echo "Running docker-compose checks on $changed_file"
            grep 'image:' $changed_file | while read -r line ; do
              IMAGE=$(echo $line | cut -d' ' -f2)
              ARCHITECTURES=$(docker run --rm mplatform/mquery:v0.5.0@sha256:d0989420b6f0d2b929fd9355f15c767f62d0e9a72cdf999d1eb16e6073782c71 $IMAGE | grep -E 'linux/amd64|linux/arm64')
              if [[ ! $ARCHITECTURES =~ "linux/amd64" ]] || [[ ! $ARCHITECTURES =~ "linux/arm" ]]; then
                echo "::error::Image $IMAGE does not support both linux/amd64 and linux/arm architectures"
                echo "imageError=$(echo Image $IMAGE does not support both linux/amd64 and linux/arm architectures)" >> $GITHUB_OUTPUT
              fi
            done
            if grep -q ':latest' $changed_file ; then
              echo "::error::Some images use the latest tag"
              echo "latestTagError=$(echo Some images use the latest tag)" >> $GITHUB_OUTPUT
            fi
            if grep -q 'PROXY_AUTH_ADD: "true"' $changed_file ; then
              echo "::error::PROXY_AUTH_ADD is set to true"
              echo "proxyAuthError=$(echo PROXY_AUTH_ADD is set to true)" >> $GITHUB_OUTPUT
            fi
          fi
        done
      shell: bash

    - name: Run umbrel app checks
      id: umbrel_app_checks
      run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          if [[ $changed_file == *umbrel-app.yml ]]
          then
            echo "Running umbrel app checks on $changed_file"
            REQUIRED_FIELDS=("manifestVersion" "id" "category" "name" "version" "tagline" "description" "developer" "website" "dependencies" "support" "port" "gallery")
            for FIELD in "${REQUIRED_FIELDS[@]}"; do
              if ! grep -q "^$FIELD:" $changed_file ; then
                echo "::error::Required field $FIELD is missing"
              fi
            done
            CATEGORY=$(grep 'category:' $changed_file | cut -d':' -f2 | tr -d '[:space:]')
            if [[ $CATEGORY != $(echo "$CATEGORY" | tr '[:upper:]' '[:lower:]') ]]; then
              echo "::error::Category value is not lowercase"
            fi
            OPTIONAL_FIELDS=("submission" "submitter" "defaultPassword" "defaultUsername" "repo")
            for FIELD in "${OPTIONAL_FIELDS[@]}"; do
              if ! grep -q "$FIELD:" $changed_file ; then
                echo "::warning::$FIELD is an optional field and is missing"
              fi
            done
            echo "$changed_file -> All umbrel app checks passed"
          fi
        done
      shell: bash

    - name: Auto comment
      uses: actions/github-script@v2.1.0
      with:
        script: |
          const proxyAuthError = steps.docker_compose_checks.outputs.proxyAuthError;
          const imageError = steps.docker_compose_checks.outputs.imageError;
          const latestTagError = steps.docker_compose_checks.outputs.latestTagError;
          let commentBody = '';
          if (proxyAuthError) {
            commentBody += `Proxy Auth Error: ${proxyAuthError}\n`;
          }
          if (imageError) {
            commentBody += `Image Error: ${imageError}\n`;
          }
          if (latestTagError) {
            commentBody += `Latest Tag Error: ${latestTagError}\n`;
          }
          if (commentBody) {
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
          }

